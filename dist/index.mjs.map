{"version":3,"sources":["../src/index.ts"],"sourcesContent":["export function slugify(text: string): string {\n  const from =\n    \"àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìıİłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż+·/_,:;\";\n  const to =\n    \"aaaaaaaaaacccddeeeeeeeegghiiiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz--------------\";\n  const textToCompare = new RegExp(\n    from.split(\"\").join(\"|\").replace(/\\+/g, \"\\\\+\"),\n    \"g\"\n  );\n\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\") // Replace spaces with -\n    .replace(textToCompare, (c) => to.charAt(from.indexOf(c))) // Replace special characters\n    .replace(/[&.]/g, \"-\") // Replace DOT with -\n    .replace(/[^\\w-º+]+/g, \"\") // Remove all non-word characters, except for º, + and -\n    .replace(/--+/g, \"-\") // Replace multiple - with single -\n    .replace(/^-+/, \"\") // Trim - from start of text\n    .replace(/-+$/, \"\"); // Trim - from end of text\n}\n"],"mappings":";AAAO,SAAS,QAAQ,MAAsB;AAC5C,QAAM,OACJ;AACF,QAAM,KACJ;AACF,QAAM,gBAAgB,IAAI;AAAA,IACxB,KAAK,MAAM,EAAE,EAAE,KAAK,GAAG,EAAE,QAAQ,OAAO,KAAK;AAAA,IAC7C;AAAA,EACF;AAEA,SAAO,KACJ,SAAS,EACT,YAAY,EACZ,QAAQ,QAAQ,GAAG,EACnB,QAAQ,eAAe,CAAC,MAAM,GAAG,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,EACxD,QAAQ,SAAS,GAAG,EACpB,QAAQ,cAAc,EAAE,EACxB,QAAQ,QAAQ,GAAG,EACnB,QAAQ,OAAO,EAAE,EACjB,QAAQ,OAAO,EAAE;AACtB;","names":[]}